{"mappings":"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","sources":["src/js/source/utils.js","src/js/source/input-field.js","src/js/source/game-field.js","src/js/source/pop-up.js","src/js/app.js"],"sourcesContent":["export function dispatchEvent(e, data) {\n  const customEvent = new CustomEvent(e, { detail: data, bubbles: true });\n  window.dispatchEvent(customEvent);\n}\n","/*============================================================================\n  InputField\n==============================================================================*/\n\nimport { dispatchEvent } from './utils.js';\n\nclass InputField extends HTMLElement {\n  constructor() {\n    super();\n    this.inputs = this.querySelectorAll('[data-input]');\n    this.reset = this.querySelector('[data-reset]');\n    this.submit = this.querySelector('[data-submit]');\n\n\n    this.inputs.forEach(input => {\n      const inputValue = input.dataset.input;\n      this.inputClicked(inputValue);\n      input.addEventListener('click', () => {\n        this.inputClicked(inputValue);\n      });\n    });\n\n    this.reset.addEventListener('click', () => {\n      dispatchEvent('reset:clicked');\n    });\n\n    this.submit.addEventListener('click', () => {\n      dispatchEvent('submit:clicked');\n    });\n\n    //set up click event for key 1-6\n    window.addEventListener('keydown', e => {\n      // 1 thru 6\n      if (e.key >= 1 && e.key <= 6) {\n        this.inputClicked(e.key);\n      }\n\n      // Submit\n      if (e.key === 'Enter') {\n        dispatchEvent('submit:clicked');\n      }\n\n      // Reset\n      if (e.key === 'Backspace') {\n        dispatchEvent('reset:clicked');\n      }\n    });\n  }\n\n  inputClicked(value) {\n    dispatchEvent('input:clicked', value);\n  }\n}\n\ncustomElements.define('input-field', InputField);\n","/*============================================================================\n  GameField\n==============================================================================*/\n\nimport { dispatchEvent } from './utils.js';\n\nclass GameField extends HTMLElement {\n  constructor() {\n    super();\n    this.currentArray = [];\n    this.historyArray = [];\n    this.answerArray = [];\n    this.currentTurn = 1;\n\n    this.init();\n  }\n\n  init() {\n    //generate answer array, 6 random numbers between 1 and 6\n    for (let i = 0; i < 6; i++) {\n      this.answerArray.push(Math.floor(Math.random() * 6) + 1);\n    }\n\n    console.log(this.answerArray);\n\n    window.addEventListener('input:clicked', e => {\n      // Add input to current array and display it in this.current, ensure array has a max size of 6\n      if (this.currentArray.length >= 6) this.currentArray.shift();\n      this.currentArray.push(e.detail);\n\n      this.displayArray(this.currentArray, this.querySelector(`[data-field=\"${this.currentTurn}\"]`));\n    });\n\n    window.addEventListener('reset:clicked', () => {\n      this.currentArray = [];\n      this.querySelector(`[data-field=\"${this.currentTurn}\"]`).innerHTML = '';\n    });\n\n    window.addEventListener('submit:clicked', () => {\n      if (this.currentArray.length < 6) return;\n\n      // Add current array to history array\n      this.historyArray.push(this.currentArray);\n\n      this.displayArray(this.currentArray, this.querySelector(`[data-field=\"${this.currentTurn}\"]`));\n      this.querySelector(`[data-field=\"${this.currentTurn}\"]`).classList.remove('active');\n\n      // Check if current array is correct\n      this.winHandler();\n\n      // Reset current array\n      this.currentArray = [];\n      this.currentTurn+= 1;\n\n      // set new active field\n      console.log(this.currentTurn)\n      if (this.currentTurn > 7) return;\n      this.querySelector(`[data-field=\"${this.currentTurn}\"]`).classList.add('active');\n    });\n  }\n\n  inputClicked(value) {\n    dispatchEvent('input:clicked', value);\n  }\n\n  displayArray(array, target) {\n    // Clear current field\n    target.innerHTML = '';\n\n    array.forEach(input => {\n      const span = document.createElement('span');\n\n      span.classList.add('input', `input--${input}`);\n\n      target.appendChild(span);\n    });\n  }\n\n  winHandler() {\n    let correct = 0;\n    const guessArray = this.currentArray;\n    const solutionArray = this.answerArray;\n    const currentField = this.querySelector(`[data-field=\"${this.currentTurn}\"]`);\n\n    guessArray.forEach((input, index) => {\n      const guess = Number(input);\n      const solution = solutionArray[index];\n\n      if(guess === solution) {\n        correct += 1;\n        currentField.children[index].classList.add('input--correct');\n\n        console.log(correct);\n        if(correct === 6) {\n          console.log('')\n          dispatchEvent('game:win');\n        }\n      } else if (solutionArray.includes(guess)) {\n        currentField.children[index].classList.add('input--close');\n      } else {\n        currentField.children[index].classList.add('input--wrong');\n      }\n\n      console.log(this.currentTurn)\n\n      if (this.currentTurn <= 7) {\n        dispatchEvent('game:lose');\n      }\n    });\n\n\n  }\n}\n\ncustomElements.define('game-field', GameField);\n","/*============================================================================\n  PopUp\n==============================================================================*/\n\nclass PopUp extends HTMLElement {\n  constructor() {\n    super();\n    this.button = this.querySelector('button');\n    this.popupScreen = this.querySelectorAll('.popup-screen');\n\n    this.button.addEventListener('click', () => {\n      this.classList.add('hidden');\n    });\n\n    //listen for game:win and game:lost event\n    window.addEventListener('game:win', () => {\n      this.displayScreen('win');\n    });\n\n    window.addEventListener('game:lost', () => {\n      this.displayScreen('lose');\n    });\n  }\n\n  displayScreen(context) {\n    console.log(context);\n    this.classList.remove('hidden');\n    // Loop through popupScreen and set hidden class\n    this.popupScreen.forEach(screen => {\n      if (screen.dataset.context === context) {\n        screen.classList.remove('hidden');\n      } else {\n        screen.classList.add('hidden');\n      }\n    });\n  }\n}\n\ncustomElements.define('pop-up', PopUp);\n","\nimport InputField from './source/input-field.js';\nimport GameField from './source/game-field.js';\nimport PopUp from './source/pop-up.js';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n});\n"],"names":["$9e9ba9099d19ad1f$export$716a11175c03fb4e","e","data","customEvent","CustomEvent","detail","bubbles","window","dispatchEvent","$f12c5a43f062f1e4$var$InputField","HTMLElement","constructor","super","this","inputs","querySelectorAll","reset","querySelector","submit","forEach","input","inputValue","dataset","inputClicked","addEventListener","key","value","customElements","define","$46a3384ea96d24d2$var$GameField","currentArray","historyArray","answerArray","currentTurn","init","i","push","Math","floor","random","console","log","length","shift","displayArray","innerHTML","classList","remove","winHandler","add","array","target","span","document","createElement","appendChild","correct","guessArray","solutionArray","currentField","index","guess","Number","children","includes","$5617c31fa8c108c9$var$PopUp","button","popupScreen","displayScreen","context","screen"],"version":3,"file":"index.ce781631.js.map"}